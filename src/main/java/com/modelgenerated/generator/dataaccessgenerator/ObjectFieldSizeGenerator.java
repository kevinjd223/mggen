/*
 * ObjectFieldSizeGenerator.java
 *
 * Created on February 2, 2003, 7:59 AM
 * Copyright 2002-2005 Kevin Delargy.
 */

package com.modelgenerated.generator.dataaccessgenerator;

import com.modelgenerated.generator.CodeBuffer;
import com.modelgenerated.modelmetadata.FieldDescriptor;
import com.modelgenerated.modelmetadata.FieldTypeEnum;
import com.modelgenerated.modelmetadata.Model;
import com.modelgenerated.modelmetadata.ObjectDescriptor;
import com.modelgenerated.foundation.logging.Logger;
import com.modelgenerated.util.Assert;
import com.modelgenerated.util.FileUtil;
import com.modelgenerated.util.StringUtil;
import java.io.File;

/**
 *
 * @author  kevind
 */
public class ObjectFieldSizeGenerator {
    CodeBuffer code;
    Model model;
    
    /** Creates a new instance of ValueObjectGenerator */
    public ObjectFieldSizeGenerator() {
    }
    
    public void generate(Model model, String path) {
        this.model = model;
        
        code = new CodeBuffer();
        generateFileContent();
        Logger.debug(this, code.toString());        

        
        Logger.debug(this, "packagePath " + path);
                
        File directory = new File(path);
        boolean bCreated = directory.mkdirs();        
        Logger.debug(this, "bCreated: " +bCreated);
        
        String filePath = path + "ObjectFieldSizeConfig.properties";
        FileUtil.writeFile(filePath, code.toString());
    }
    
    private void generateFileContent() {
        generateHeader();
        generateObjectFieldSizes();        
    }
    
    protected void generateHeader() {
        code.addLine("# Object-Field sizes");
        code.addLine("# Generated by ObjectFieldSizeGenerator");
        String copyrightNotice = model.getCopyrightNotice();
        if (!StringUtil.isEmpty(copyrightNotice)) { 
            code.addLine("# " + copyrightNotice);
        }
        code.addLine();
    }
    
    protected void generateObjectFieldSizes() {
        for (ObjectDescriptor objectDescriptor : model.getObjects().values()) {
            generateObjectFieldSizes(objectDescriptor);            
        }       
    }

    protected void generateObjectFieldSizes(ObjectDescriptor objectDescriptor) {
        for (FieldDescriptor field : objectDescriptor.getFields()) {
            if (field.getType() == FieldTypeEnum.STRING) {
                code.addLine(field.getObjectField() + "=" + field.getSize());
            }
        }
    }
}
